/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3
#define ART 4
#define ARL 5

&lt { quick-tap-ms = <200>; };
&mt { quick-tap-ms = <200>; };
/ {
    behaviors {

        gui_space: gui_space {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press &kp LGUI>
                , <&macro_tap &kp SPACE>
                , <&macro_release &kp LGUI>
            ;
        };

        gui_space_layer: gui_space_layer {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            bindings = <&mo>, <&gui_space>;
        };

        ctrl_space: ctrl_space {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press &kp RCTRL>
                , <&macro_tap &kp SPACE>
                , <&macro_release &kp RCTRL>
            ;
        };

        ctrl_space_layer: ctrl_space_layer {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            bindings = <&mo>, <&ctrl_space>;
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        mmv {
            acceleration-exponent = <1>;
            time-to-max-speed-ms = <900>;
            delay-ms = <0>;
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
&kp ESC    &kp Q       &kp W       &kp E        &kp R                    &kp T                 &kp Y           &kp U           &kp I         &kp O       &kp P          &kp LBKT
&kp TAB    &hm LALT A  &hm LGUI S  &hm LCTRL D  &hm LSHIFT F             &kp G                 &kp H           &hm RSHIFT J    &hm RCTRL K   &hm LGUI L  &hm RALT SEMI  &kp SQT
&kp GRAVE  &kp Z       &kp X       &kp C        &kp V                    &kp B                 &kp N           &kp M           &kp COMMA     &kp DOT     &kp FSLH       &kp RBKT 
                                   &kp K_CMENU  &gui_space_layer LWR 0   &lt RSE SPACE         &lt RSE ENTER   &lt LWR BSPC    &kp DEL 
                        >;
                };


                lower_layer {
                        bindings = <
&trans     &kp N1      &kp N2      &kp N3       &kp N4        &kp N5                &kp N6          &kp N7          &kp N8        &kp N9           &kp N0         &trans   
&trans     &trans      &mkp RCLK   &mkp MCLK    &mkp LCLK     &trans                &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &kp MINUS      &kp EQUAL          
&trans     &trans      &trans      &trans       &trans        &trans                &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &kp BSLH       &trans   
                                   &trans       &trans        &mo ADJ               &mo ADJ         &trans          &trans 
                        >;
                };
  

                 raise_layer {
                        bindings = <
&trans      &kp F1     &kp F2  &kp F3   &kp F4     &kp F5               &kp F6           &kp F7           &kp F8         &kp F9            &kp F10   &trans  
&trans      &kp HOME   &trans  &trans   &trans     &kp END              &kp LEFT         &kp DOWN         &kp UP         &kp RIGHT         &kp F11   &kp F12
&trans      &kp PG_UP  &trans  &trans   &trans     &kp PG_DN            &msc SCRL_LEFT   &msc SCRL_DOWN   &msc SCRL_UP   &msc SCRL_RIGHT   &trans    &trans   
                               &trans   &mo ADJ    &trans               &trans           &mo ADJ          &trans
                        >;
                };


                adjust_layer {
                        bindings = <
&studio_unlock  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4         &trans      &trans        &trans        &trans      &kp C_PLAY  &trans    
&trans          &trans        &trans        &trans        &trans        &trans               &kp C_PREV  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT  &trans      &trans    
&sys_reset      &trans        &trans        &trans        &trans        &trans               &trans      &kp C_MUTE    &trans        &trans      &trans      &trans
                                            &tog ART      &trans        &trans               &trans      &trans        &tog ART   
                        >;
                };

/*                 artsey_layer { */
/*                     bindings = < */
/* // 0      1          2         3        4        5                            6        7          8         9        10        11 */
/* &kp ESC   &kp COMMA  &kp LBRC  &kp LBKT &kp LPAR &kp SEMI                     &kp SEMI &kp LPAR   &kp LBKT  &kp LBRC &kp COMMA &kp ESC */
/* // 12     13         14        15       16       17                           18       19         20        21       22        23 */
/* &kp TAB   &kp S      &kp T     &kp R    &lt A    &kp SQT                      &kp SQT  &lt A      &kp R     &kp T    &kp S     &kp TAB */
/* // 24     25         26        27       28       29                           30       31         32        33       34        35 */
/* &kp BSPC  &kp O      &kp I     &kp Y    &kp E    &kp HASH                     &kp HASH &kp E      &kp Y     &kp I    &kp O     &kp GRAVE */
/* //                             36       37       38                           39       40         41 */
/*                                &none    &none    &none                        &none    &none      &none */
/*                     >; */
/*                 }; */
         };
};
/**/
/* / { */
/*     combos { */
/*         // ========== LEFT SIDE ========== */
/*         oiy_m: oiy_m { */
/*             timeout-ms = <200>; */
/*             key-positions = <25 26 27>;  // O I Y */
/*             bindings = <&kp m>; */
/*             require-pairs = true; */
/*         }; */
/**/
/*         oe_b: oe_b { */
/*             timeout-ms = <200>; */
/*             key-positions = <25 28>;     // O E */
/*             bindings = <&kp b>; */
/*             require-pairs = true; */
/*         }; */
/**/
/*         oi_n: oi_n { */
/*             timeout-ms = <200>; */
/*             key-positions = <25 26>;     // O I */
/*             bindings = <&kp n>; */
/*             require-pairs = true; */
/*         }; */
/**/
/*         ye_c: ye_c { */
/*             timeout-ms = <200>; */
/*             key-positions = <27 28>;     // Y E */
/*             bindings = <&kp c>; */
/*             require-pairs = true; */
/*         }; */
/**/
/*         oie_p: oie_p { */
/*             timeout-ms = <200>; */
/*             key-positions = <25 26 28>;  // O I E */
/*             bindings = <&kp p>; */
/*             require-pairs = true; */
/*         }; */
/**/
/*         tra_d: tra_d { */
/*             timeout-ms = <200>; */
/*             key-positions = <14 15 16>;  // T R A */
/*             bindings = <&kp d>; */
/*             require-pairs = true; */
/*         }; */
/**/
/*         sta_q: sta_q { */
/*             timeout-ms = <200>; */
/*             key-positions = <13 14 16>;  // S T A */
/*             bindings = <&kp q>; */
/*             require-pairs = true; */
/*         }; */
/**/
/*         ra_f: ra_f { */
/*             timeout-ms = <200>; */
/*             key-positions = <15 16>;     // R A */
/*             bindings = <&kp f>; */
/*             require-pairs = true; */
/*         }; */
/**/
/*         iy_u: iy_u { */
/*             timeout-ms = <200>; */
/*             key-positions = <26 27>;     // I Y */
/*             bindings = <&kp u>; */
/*             require-pairs = true; */
/*         }; */
/**/
/*         tr_g: tr_g { */
/*             timeout-ms = <200>; */
/*             key-positions = <14 15>;     // T R */
/*             bindings = <&kp g>; */
/*             require-pairs = true; */
/*         }; */
/**/
/*         sr_v: sr_v { */
/*             timeout-ms = <200>; */
/*             key-positions = <13 15>;     // S R */
/*             bindings = <&kp v>; */
/*             require-pairs = true; */
/*         }; */
/**/
/*         sa_w: sa_w { */
/*             timeout-ms = <200>; */
/*             key-positions = <13 16>;     // S A */
/*             bindings = <&kp w>; */
/*             require-pairs = true; */
/*         }; */
/**/
/*         st_j: st_j { */
/*             timeout-ms = <200>; */
/*             key-positions = <13 14>;     // S T */
/*             bindings = <&kp j>; */
/*             require-pairs = true; */
/*         }; */
/**/
/*         str_x: str_x { */
/*             timeout-ms = <200>; */
/*             key-positions = <13 14 15>;  // S T R */
/*             bindings = <&kp x>; */
/*             require-pairs = true; */
/*         }; */
/**/
/*         stra_z: stra_z { */
/*             timeout-ms = <200>; */
/*             key-positions = <13 14 15 16>;  // S T R A */
/*             bindings = <&kp z>; */
/*             require-pairs = true; */
/*         }; */
/**/
/*         iye_l: iye_l { */
/*             timeout-ms = <200>; */
/*             key-positions = <26 27 28>;  // I Y E */
/*             bindings = <&kp x>; */
/*             require-pairs = true; */
/*         }; */
/*     }; */
/* }; */
