/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3
#define ART 4
#define ARL 5
#define ARM 6
#define ARN 7
#define ARO 8
#define ARS 9
#define ARB 10

&sl { release-after-ms = <2000>; };
&lt { quick-tap-ms = <200>; };
&mt { quick-tap-ms = <200>; };

/* 
                    bindings = <
&trans    &trans     &trans    &trans   &trans   &trans               &trans   &trans     &trans    &trans   &trans    &trans
&trans    &trans     &trans    &trans   &trans   &trans               &trans   &trans     &trans    &trans   &trans    &trans
&trans    &trans     &trans    &trans   &trans   &trans               &trans   &trans     &trans    &trans   &trans    &trans
                               &trans   &trans   &trans               &trans   &trans     &trans
                    >;
*/
/ {
    behaviors {
        kt_on: key_toggle_on_only {
            compatible = "zmk,behavior-key-toggle";
            #binding-cells = <1>;
            display-name = "Key Toggle On";
            toggle-mode = "on";
        };

        tap_kt: tap_kt {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            bindings = <&kp>, <&kt_on>;
        };

        gui_space: gui_space {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press &kp LGUI>
                , <&macro_tap &kp SPACE>
                , <&macro_release &kp LGUI>
            ;
        };

        gui_space_layer: gui_space_layer {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            bindings = <&mo>, <&gui_space>;
        };

        ctrl_space: ctrl_space {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press &kp RCTRL>
                , <&macro_tap &kp SPACE>
                , <&macro_release &kp RCTRL>
            ;
        };

        ctrl_space_layer: ctrl_space_layer {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            bindings = <&mo>, <&ctrl_space>;
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        mmv {
            acceleration-exponent = <1>;
            time-to-max-speed-ms = <900>;
            delay-ms = <0>;
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
&kp ESC    &kp Q       &kp W       &kp E        &kp R                    &kp T                 &kp Y           &kp U           &kp I         &kp O       &kp P          &kp LBKT
&kp TAB    &hm LALT A  &hm LGUI S  &hm LCTRL D  &hm LSHIFT F             &kp G                 &kp H           &hm RSHIFT J    &hm RCTRL K   &hm LGUI L  &hm RALT SEMI  &kp SQT
&kp GRAVE  &kp Z       &kp X       &kp C        &kp V                    &kp B                 &kp N           &kp M           &kp COMMA     &kp DOT     &kp FSLH       &kp RBKT 
                                   &kp K_CMENU  &gui_space_layer LWR 0   &lt RSE SPACE         &lt RSE ENTER   &lt LWR BSPC    &kp DEL 
                        >;
                };


                lower_layer {
                        bindings = <
&trans     &kp N1      &kp N2      &kp N3       &kp N4        &kp N5                &kp N6          &kp N7          &kp N8        &kp N9           &kp N0         &trans   
&trans     &trans      &mkp RCLK   &mkp MCLK    &mkp LCLK     &trans                &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &kp MINUS      &kp EQUAL          
&trans     &trans      &trans      &trans       &trans        &trans                &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &kp BSLH       &trans   
                                   &trans       &trans        &mo ADJ               &mo ADJ         &trans          &trans 
                        >;
                };
  

                 raise_layer {
                        bindings = <
&trans      &kp F1     &kp F2  &kp F3   &kp F4     &kp F5               &kp F6           &kp F7           &kp F8         &kp F9            &kp F10   &trans  
&trans      &kp HOME   &trans  &trans   &trans     &kp END              &kp LEFT         &kp DOWN         &kp UP         &kp RIGHT         &kp F11   &kp F12
&trans      &kp PG_UP  &trans  &trans   &trans     &kp PG_DN            &msc SCRL_LEFT   &msc SCRL_DOWN   &msc SCRL_UP   &msc SCRL_RIGHT   &trans    &trans   
                               &trans   &mo ADJ    &trans               &trans           &mo ADJ          &trans
                        >;
                };


                adjust_layer {
                        bindings = <
&studio_unlock  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4         &trans      &trans        &trans        &trans      &kp C_PLAY  &trans    
&trans          &trans        &trans        &trans        &trans        &trans               &kp C_PREV  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT  &trans      &trans    
&bt BT_CLR      &trans        &trans        &trans        &trans        &trans               &trans      &kp C_MUTE    &trans        &trans      &trans      &trans
                                            &tog ART      &trans        &trans               &trans      &trans        &tog ART   
                        >;
                };

                #ifndef CONFIG_ZMK_SPLIT_RIGHT_SIDE
                left_layer {
                    bindings = <
// 0   1          2        3          4          5
&kp M  &kp R      &kp T    &kp N      &kp I      &kp C           &trans &trans &trans &trans &trans &trans
// 12  13         14       15         16         17
&kp U  &tap_kt LALT E &tap_kt LGUI L  &tap_kt LCTRL K &tap_kt LSHIFT J  &kp H           &trans &trans &trans &trans &trans &trans
// 24  25         26         27         28         29
&kp W  &lt ARO A  &lt ARB S  &kp D      &lt ARS F  &kp O           &trans &trans &trans &trans &trans &trans
//                         36         37         38
                           &lt ARM P  &lt ARL Y  &lt ARN G       &trans &trans &trans
                    >;
                };

                left_lower_layer {
                    bindings = <
&kp F12  &kp F11  &kp F6  &kp F5  &kp F4  &kp F1     &trans &trans &trans &trans &trans &trans
&kp N5   &kp N4   &kp N3  &kp N2  &kp N1  &kp N0     &trans &trans &trans &trans &trans &trans
&trans   &kp N9   &kp N8  &kp N7  &kp N6  &trans     &trans &trans &trans &trans &trans &trans
                          &trans  &trans  &trans     &trans &trans &trans
                    >;
                };

                left_mouse_layer {
                    bindings = <
&trans  &trans  &mkp RCLK       &mkp MCLK     &mkp LCLK       &trans                   &trans &trans &trans &trans &trans &trans
&trans  &trans  &mmv MOVE_LEFT  &mmv MOVE_UP  &mmv MOVE_DOWN  &mmv MOVE_RIGHT          &trans &trans &trans &trans &trans &trans
&trans  &trans  &msc SCRL_LEFT  &msc SCRL_UP  &msc SCRL_DOWN  &msc SCRL_RIGHT          &trans &trans &trans &trans &trans &trans
                                &trans        &trans          &trans                   &trans &trans &trans
                    >;
                };

                left_nav_layer {
                    bindings = <
&trans  &trans   &trans    &trans     &trans     &trans        &trans &trans &trans &trans &trans &trans
&trans  &trans   &kp LEFT  &kp UP     &kp DOWN   &kp RIGHT     &trans &trans &trans &trans &trans &trans
&trans  &trans   &kp HOME  &kp PG_UP  &kp PG_DN  &kp END       &trans &trans &trans &trans &trans &trans
                           &trans     &trans     &trans        &trans &trans &trans
                    >;

                };

                left_other_layer {
                    bindings = <
&bt BT_CLR  &trans       &trans        &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0     &trans &trans &trans &trans &trans &trans
&trans      &kp C_PLAY   &kp C_PREV    &kp C_VOL_UP  &kp C_VOL_DN  &kp C_NEXT       &trans &trans &trans &trans &trans &trans
&tog ART    &trans       &trans        &trans        &kp C_MUTE    &trans           &trans &trans &trans &trans &trans &trans
                         &trans        &trans        &trans                         &trans &trans &trans
                    >;
                };

                left_special_layer {
                    bindings = <
&trans  &trans     &trans     &trans     &trans     &trans         &trans &trans &trans &trans &trans &trans
&trans  &kp AT     &kp DLLR   &kp STAR   &trans     &trans         &trans &trans &trans &trans &trans &trans
&trans  &kp GRAVE  &kp MINUS  &kp EQUAL  &trans     &trans         &trans &trans &trans &trans &trans &trans 
                              &trans     &kp CARET  &kp AT         &trans &trans &trans
                    >;
                };

                left_brackets_layer {
                    bindings = <
&trans &trans    &trans     &trans    &trans  &trans      &trans &trans &trans &trans &trans &trans
&trans &kp LBRC  &kp LBKT   &kp LPAR  &trans  &trans      &trans &trans &trans &trans &trans &trans
&trans &kp RBRC  &kp RBKT   &kp RPAR  &trans  &trans      &trans &trans &trans &trans &trans &trans
                            &trans    &kp LT  &kp GT      &trans &trans &trans
                    >;
                };
                #else
                right_layer {
                    bindings = <
// 0       1          2          3      4          5
&kp C      &kp I      &kp N      &kp T  &kp R      &kp M         &trans &trans &trans &trans &trans &trans
// 12      13         14         15     16         17
&kp U      &tap_kt LSHIFT J  &tap_kt LCTRL K      &tap_kt LGUI L  &tap_kt LALT E      &kp H         &trans &trans &trans &trans &trans &trans
// 24      25         26         27     28         29
&kp O      &lt ARS F  &kp D      &lt ARB S  &lt ARO A  &kp W         &trans &trans &trans &trans &trans &trans
// 36      37         38
&lt ARN G  &lt ARL Y  &kp ARM P                                  &trans &trans &trans
                    >;
                };

                right_lower_layer {
                    bindings = <
&kp F1  &kp F4  &kp F5  &kp F6  &kp F11  &kp F12    &trans &trans &trans &trans &trans &trans
&kp N0  &kp N1  &kp N2  &kp N3  &kp N4   &kp N5     &trans &trans &trans &trans &trans &trans
&kp N6  &kp N7  &kp N8  &kp N9  &trans   &trans     &trans &trans &trans &trans &trans &trans
&trans  &trans  &trans                              &trans &trans &trans
                    >;
                };

                right_mouse_layer {
                    bindings = <
&trans           &mkp LCLK       &mkp MCLK     &mkp RCLK       &trans     &trans &trans &trans &trans &trans &trans
&mmv MOVE_RIGHT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_LEFT  &trans     &trans &trans &trans &trans &trans &trans
&msc SCRL_RIGHT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_LEFT  &trans     &trans &trans &trans &trans &trans &trans
&trans           &trans          &trans                                   &trans &trans &trans
                    >;
                };

                right_nav_layer {
                    bindings = <
&trans    &trans     &trans    &trans    &trans  &trans          &trans &trans &trans &trans &trans &trans
&kp RIGHT &kp DOWN   &kp UP    &kp LEFT  &trans  &trans          &trans &trans &trans &trans &trans &trans
&kp END   &kp PG_DN  &kp PG_UP &kp HOME  &trans  &trans          &trans &trans &trans &trans &trans &trans
&trans    &trans     &trans                                      &trans &trans &trans
                    >;
                };

                right_other_layer {
                    bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans      &trans      &bt BT_CLR     &trans &trans &trans &trans &trans &trans
&kp C_NEXT    &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PREV  &kp C_PLAY  &trans         &trans &trans &trans &trans &trans &trans
&trans        &trans        &trans        &kp C_MUTE  &trans      &tog ART       &trans &trans &trans &trans &trans &trans
&trans        &trans        &trans                                               &trans &trans &trans
                    >;
                };

                right_special_layer {
                    bindings = <
&trans  &trans     &trans     &trans     &trans     &trans        &trans &trans &trans &trans &trans &trans
&trans  &trans     &kp STAR   &kp DLLR   &kp AT     &trans        &trans &trans &trans &trans &trans &trans
&trans  &trans     &kp EQUAL  &kp MINUS  &kp GRAVE  &trans        &trans &trans &trans &trans &trans &trans 
&kp AT  &kp CARET  &trans                                         &trans &trans &trans
                    >;
                };

                right_brackets_layer {
                    bindings = <
&trans  &trans  &trans   &trans   &trans    &trans       &trans &trans &trans &trans &trans &trans
&trans  &trans  &kp LPAR &kp LBKT &kp LBRC  &trans       &trans &trans &trans &trans &trans &trans
&trans  &trans  &kp RPAR &kp RBKT &kp RBRC  &trans       &trans &trans &trans &trans &trans &trans
&kp GT  &kp LT  &trans                                   &trans &trans &trans
                    >;
                };
                #endif
         };
};

/
{
    combos {
        compatible = "zmk,combos";

        x: x {
            timeout-ms = <200>;
            key-positions = <26 27>;
            bindings = <&kp X>;
            layers = <4>;
        };

        esc: esc {
            timeout-ms = <200>;
            key-positions = <14 15>;
            bindings = <&kp ESC>;
            layers = <4>;
        };

        colon: colon {
            timeout-ms = <200>;
            key-positions = <13 16>;
            bindings = <&kp COLON>;
            layers = <4>;
        };

        tab: tab {
            timeout-ms = <200>;
            key-positions = <25 28>;
            bindings = <&kp TAB>;
            layers = <4>;
        };

        del: del {
            timeout-ms = <200>;
            key-positions = <1 2 3 4>;
            bindings = <&kp DEL>;
            layers = <4>;
        };

        space: space {
            timeout-ms = <300>;
            key-positions = <25 26 27 28>;
            bindings = <&kp SPACE>;
            layers = <4>;
        };

        bspc: bspc {
            timeout-ms = <300>;
            key-positions = <13 14 15 16>;
            bindings = <&kp BSPC>;
            layers = <4>;
        };

        clear: clear {
            timeout-ms = <400>;
            key-positions = <13 14 15 16 25 26 27 28>;
            bindings = <&sys_reset>;
            layers = <4>;
        };

        #ifndef CONFIG_ZMK_SPLIT_RIGHT_SIDE
        v: v {
            timeout-ms = <200>;
            key-positions = <27 28>;
            bindings = <&kp V>;
            layers = <4>;
        };

        q: q {
            timeout-ms = <200>;
            key-positions = <13 14>;
            bindings = <&kp Q>;
            layers = <4>;
        };

        z: z {
            timeout-ms = <200>;
            key-positions = <24 25>;
            bindings = <&kp Z>;
            layers = <4>;
        };

        alt: alt {
            timeout-ms = <200>;
            key-positions = <13 26>;
            bindings = <&kt LALT>;
            layers = <4>;
        };

        gui: gui {
            timeout-ms = <200>;
            key-positions = <13 27>;
            bindings = <&kt LGUI>;
            layers = <4>;
        };

        ctrl: ctrl {
            timeout-ms = <200>;
            key-positions = <13 28>;
            bindings = <&kt LCTRL>;
            layers = <4>;
        };

        shift: shift {
            timeout-ms = <200>;
            key-positions = <13 14 15 28>;
            bindings = <&kt LSHIFT>;
            layers = <4>;
        };

        shift_once: shift_once {
            timeout-ms = <200>;
            key-positions = <16 25 26 27>;
            bindings = <&sk LSHIFT>;
            layers = <4>;
        };

        enter: enter {
            timeout-ms = <200>;
            key-positions = <15 28>;
            bindings = <&kp ENTER>;
            layers = <4>;
        };

        comma: comma {
            timeout-ms = <200>;
            key-positions = <16 27>;
            bindings = <&kp COMMA>;
            layers = <4>;
        };

        dot: dot {
            timeout-ms = <200>;
            key-positions = <16 26>;
            bindings = <&kp DOT>;
            layers = <4>;
        };

        slash: slash {
            timeout-ms = <200>;
            key-positions = <16 25>;
            bindings = <&kp FSLH>;
            layers = <4>;
        };

        bslash: bslash {
            timeout-ms = <200>;
            key-positions = <13 25>;
            bindings = <&kp BSLH>;
            layers = <4>;
        };


        excl: excl {
            timeout-ms = <200>;
            key-positions = <16 28>;
            bindings = <&kp EXCL>;
            layers = <4>;
        };

        quest: quest {
            timeout-ms = <200>;
            key-positions = <16 25>;
            bindings = <&kp QMARK>;
            layers = <4>;
        };

        quote: quote {
            timeout-ms = <200>;
            key-positions = <14 26>;
            bindings = <&kp SQT>;
            layers = <4>;
        };

        semi: semi {
            timeout-ms = <200>;
            key-positions = <15 27>;
            bindings = <&kp SEMI>;
            layers = <4>;
        };
        #else
        v: v {
            timeout-ms = <200>;
            key-positions = <25 26>;
            bindings = <&kp V>;
            layers = <4>;
        };

        q: q {
            timeout-ms = <200>;
            key-positions = <15 16>;
            bindings = <&kp Q>;
            layers = <4>;
        };

        z: z {
            timeout-ms = <200>;
            key-positions = <28 29>;
            bindings = <&kp Z>;
            layers = <4>;
        };

        del: del {
            timeout-ms = <200>;
            key-positions = <28 27 25>;
            bindings = <&kp DEL>;
            layers = <4>;
        };

        alt: alt {
            timeout-ms = <200>;
            key-positions = <16 27>;
            bindings = <&kt LALT>;
            layers = <4>;
        };

        gui: gui {
            timeout-ms = <200>;
            key-positions = <16 26>;
            bindings = <&kt LGUI>;
            layers = <4>;
        };

        ctrl: ctrl {
            timeout-ms = <200>;
            key-positions = <16 25>;
            bindings = <&kt LCTRL>;
            layers = <4>;
        };

        shift: shift {
            timeout-ms = <200>;
            key-positions = <16 15 14 25>;
            bindings = <&kt LSHIFT>;
            layers = <4>;
        };

        shift_once: shift_once {
            timeout-ms = <200>;
            key-positions = <13 28 27 26>;
            bindings = <&sk LSHIFT>;
            layers = <4>;
        };

        enter: enter {
            timeout-ms = <200>;
            key-positions = <14 25>;
            bindings = <&kp ENTER>;
            layers = <4>;
        };

        space: space {
            timeout-ms = <200>;
            key-positions = <28 27 26 25>;
            bindings = <&kp SPACE>;
            layers = <4>;
        };

        comma: comma {
            timeout-ms = <200>;
            key-positions = <13 26>;
            bindings = <&kp COMMA>;
            layers = <4>;
        };

        dot: dot {
            timeout-ms = <200>;
            key-positions = <13 27>;
            bindings = <&kp DOT>;
            layers = <4>;
        };

        slash: slash {
            timeout-ms = <200>;
            key-positions = <13 28>;
            bindings = <&kp FSLH>;
            layers = <4>;
        };

        bslash: bslash {
            timeout-ms = <200>;
            key-positions = <16 28>;
            bindings = <&kp BSLH>;
            layers = <4>;
        };

        excl: excl {
            timeout-ms = <200>;
            key-positions = <13 25>;
            bindings = <&kp EXCL>;
            layers = <4>;
        };

        quest: quest {
            timeout-ms = <200>;
            key-positions = <13 28>;
            bindings = <&kp QMARK>;
            layers = <4>;
        };

        quote: quote {
            timeout-ms = <200>;
            key-positions = <15 27>;
            bindings = <&kp SQT>;
            layers = <4>;
        };

        semi: semi {
            timeout-ms = <200>;
            key-positions = <14 26>;
            bindings = <&kp SEMI>;
            layers = <4>;
        };
        #endif
    };
}; 
